#!/bin/sh

. ./gcc.cfg

[ -z "$GCC_DIR" ] && GCC_DIR=gcc

if [ ! -d $GCC_DIR/.git ]; then
  echo "$GCC_DIR isn't a GCC git source tree!"
  exit 1
fi

[ -z "$LOG" ] && LOG=`pwd`/git.log

found=

gcc_test ()
{
  # Check if it should be skipped.
  cd $GCC_DIR
  REV=$(git log -1 |
	grep git-svn-id |
	awk '{ print $2 }' |
	awk -F@ '{ print $2 }')
  cd - > /dev/null
  if test -f $branch/skip && grep -q "^$REV$" $branch/skip; then
    echo Skip GCC $branch branch revision $REV!
    status=skip
    return
  fi

  # Build gcc
  ./gcc-build
  case $? in
  0)
    # Run test
    $GCC_TEST
    if [ $? = 0 ];then
      status=good
    else
      status=bad
    fi
    case x$found in
    x)
      found=$status
      ;;
    *)
      [ $found = $status ] || found=goodbad
      ;;
    esac
    last_status=status
    ;;
  2)
    status=$last_status
    ;;
  *)
    status=skip
    echo GCC $branch branch revision $REV failed to build!
    ;;
  esac
}

# Remove the last revision
rm -f $branch/last_revision

rm -f $LOG
touch $LOG

if [ -z "$last_status" -a -n "$bad_revision" -a -n "$good_revision" ]; then
  cd $GCC_DIR
  git bisect reset
  cd -

  # Try the good revision
  echo Try the good revision: $good_revision
  ./gcc-update $good_revision
  [ $? = 0 -o $? = 2 ] || exit 1
  cd $GCC_DIR
  git bisect start || exit 1
  git bisect good || exit 1
  cd - > /dev/null
  gcc_test
  if [ $status != good ]; then
    echo Good revision $good_revision is bad!
    exit 1
  fi

  # Try the bad revision
  echo Try the bad revision: $bad_revision
  ./gcc-update $bad_revision || exit 1
  gcc_test
  if [ $status == good ]; then
    echo Bad revision $bad_revision is good!
    exit 1
  fi
  last_status=bad
  found=bad

  # Start bisect
  cd $GCC_DIR
  bisect=$(git bisect bad 2>&1)
  echo "$bisect" | grep "Bisecting:"
  status=$?
  cd - > /dev/null
  if [ $status != 0 ]; then
    echo "$bisect"
    exit 0
  fi
  initial_check=yes
else
  initial_check=no
fi

while [ 1 = 1 ]; do
  gcc_test
  cd $GCC_DIR
  bisect=$(git bisect $status 2>&1)
  echo "$bisect" | grep "Bisecting:"
  status=$?
  ./contrib/gcc_update --touch >> $LOG
  cd - > /dev/null
  [ $status != 0 ] && break
done

echo "$bisect"

if [ $initial_check = "no" -a $found != "goodbad" ]; then
  echo No bad nor good commit found on GCC $branch branch!
  exit 1
fi
